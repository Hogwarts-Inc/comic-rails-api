version: '3.5'
services:
  db:
    image: postgres:15
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

  web:
    image: docker-back-staging:latest
    command: bash -c "rm -f tmp/pids/server.pid && bundle install && bundle exec rails db:create && bundle exec rails db:migrate && bundle exec rails s -p 3000 -b '0.0.0.0'"
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DOCKER_DATABASE_HOST}
      - AZURE_ACCOUNT_NAME=${AZURE_ACCOUNT_NAME}
      - AZURE_ACCESS_KEY=${AZURE_ACCESS_KEY}
      - AZURE_CONTAINER=${AZURE_CONTAINER}
      - SERVER_URL=${SERVER_URL}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - CLIENT_ORIGIN_URL=${CLIENT_ORIGIN_URL}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - REDIS_URL=${REDIS_URL}
      - RAILS_ENV=${RAILS_ENV}

  redis:
    image: redis
    command: redis-server
    volumes:
      - ./tmp/redis:/data
    ports:
      - "6379:6379"
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DOCKER_DATABASE_HOST}
      - AZURE_ACCOUNT_NAME=${AZURE_ACCOUNT_NAME}
      - AZURE_ACCESS_KEY=${AZURE_ACCESS_KEY}
      - AZURE_CONTAINER=${AZURE_CONTAINER}
      - SERVER_URL=${SERVER_URL}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - CLIENT_ORIGIN_URL=${CLIENT_ORIGIN_URL}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - REDIS_URL=${REDIS_URL}
      - RAILS_ENV=${RAILS_ENV}

  sidekiq:
    image: docker-back-staging:latest
    command: bash -c "rm -f tmp/pids/server.pid && bundle install && bundle exec sidekiq"
    ports:
      - "7432:7432"
    depends_on:
      - db
      - redis
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DOCKER_DATABASE_HOST}
      - AZURE_ACCOUNT_NAME=${AZURE_ACCOUNT_NAME}
      - AZURE_ACCESS_KEY=${AZURE_ACCESS_KEY}
      - AZURE_CONTAINER=${AZURE_CONTAINER}
      - SERVER_URL=${SERVER_URL}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - CLIENT_ORIGIN_URL=${CLIENT_ORIGIN_URL}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - REDIS_URL=${REDIS_URL}
      - RAILS_ENV=${RAILS_ENV}
      - NFT_STORAGE_API_KEY=${NFT_STORAGE_API_KEY}
      - NFT_STORAGE_ENDPOINT=${NFT_STORAGE_ENDPOINT}

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DOCKER_DATABASE_HOST}
      - AZURE_ACCOUNT_NAME=${AZURE_ACCOUNT_NAME}
      - AZURE_ACCESS_KEY=${AZURE_ACCESS_KEY}
      - AZURE_CONTAINER=${AZURE_CONTAINER}
      - SERVER_URL=${SERVER_URL}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - CLIENT_ORIGIN_URL=${CLIENT_ORIGIN_URL}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - REDIS_URL=${REDIS_URL}
      - RAILS_ENV=${RAILS_ENV}
      - NFT_STORAGE_API_KEY=${NFT_STORAGE_API_KEY}
      - NFT_STORAGE_ENDPOINT=${NFT_STORAGE_ENDPOINT}
    command: server --console-address ":9001" /data
    volumes:
      - ./tmp/minio:/data
