---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/canvas":
    get:
      summary: list canvas
      responses:
        '200':
          description: successful
    post:
      summary: create canva
      requestBody:
        $ref: '#/components/requestBodies/canvaBody'
      responses:
        '200':
          description: successful
  "/api/v1/canvas/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show canva
      responses:
        '200':
          description: successful
    patch:
      summary: update canva
      requestBody:
        $ref: '#/components/requestBodies/canvaBody'
      responses:
        '200':
          description: successful
    put:
      summary: update canva
      requestBody:
        $ref: '#/components/requestBodies/canvaBody'
      responses:
        '200':
          description: successful
    delete:
      summary: delete canva
      responses:
        '200':
          description: successful
  "/api/v1/storiettes":
    get:
      summary: list storiettes
      responses:
        '200':
          description: successful
    post:
      summary: create storiette
      requestBody:
        $ref: '#/components/requestBodies/storietteBody'
      responses:
        '200':
          description: successful
  "/api/v1/storiettes/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show storiette
      responses:
        '200':
          description: successful
    patch:
      summary: update storiette
      requestBody:
        $ref: '#/components/requestBodies/storietteBody'
      responses:
        '200':
          description: successful
    put:
      summary: update storiette
      requestBody:
        $ref: '#/components/requestBodies/storietteBody'
      responses:
        '200':
          description: successful
    delete:
      summary: delete storiette
      responses:
        '200':
          description: successful
  "/api/v1/chapters":
    get:
      summary: list chapters
      responses:
        '200':
          description: successful
    post:
      summary: create chapter
      requestBody:
        $ref: '#/components/requestBodies/chapterBody'
      responses:
        '200':
          description: successful
  "/api/v1/chapters/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show chapter
      responses:
        '200':
          description: successful
    patch:
      summary: update chapter
      requestBody:
        $ref: '#/components/requestBodies/chapterBody'
      responses:
        '200':
          description: successful
    put:
      summary: update chapter
      requestBody:
        $ref: '#/components/requestBodies/chapterBody'
      responses:
        '200':
          description: successful
    delete:
      summary: delete chapter
      responses:
        '200':
          description: successful
  "/api/v1/graphic_resources":
    get:
      summary: list graphic_resources
      responses:
        '200':
          description: successful
    post:
      summary: create graphic_resource
      requestBody:
        $ref: '#/components/requestBodies/graphicResourceBody'
      responses:
        '200':
          description: successful
  "/api/v1/graphic_resources/resource_for_type?resource_type={resource_type}":
    parameters:
    - name: resource_type
      in: path
      description: resource_type
      required: true
      schema:
        type: string
        enum: [character, dialog, object, background]
    get:
      summary: list graphic_resource by type
      responses:
        '200':
          description: successful
  "/api/v1/graphic_resources/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show graphic_resource
      responses:
        '200':
          description: successful
    patch:
      summary: update graphic_resource
      requestBody:
        $ref: '#/components/requestBodies/graphicResourceBody'
      responses:
        '200':
          description: successful
    put:
      summary: update graphic_resource
      requestBody:
        $ref: '#/components/requestBodies/graphicResourceBody'
      responses:
        '200':
          description: successful
    delete:
      summary: delete graphic_resource
      responses:
        '200':
          description: successful
  "/api/v1/characters":
    get:
      summary: list characters
      responses:
        '200':
          description: successful
    post:
      summary: create character
      requestBody:
        $ref: '#/components/requestBodies/characterBody'
      responses:
        '200':
          description: successful
  "/api/v1/characters/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show character
      responses:
        '200':
          description: successful
    patch:
      summary: update character
      requestBody:
        $ref: '#/components/requestBodies/characterBody'
      responses:
        '200':
          description: successful
    put:
      summary: update character
      requestBody:
        $ref: '#/components/requestBodies/characterBody'
      responses:
        '200':
          description: successful
    delete:
      summary: delete character
      responses:
        '200':
          description: successful
  "/api/v1/descriptions":
    get:
      summary: list descriptions
      responses:
        '200':
          description: successful
    post:
      summary: create description
      requestBody:
        $ref: '#/components/requestBodies/descriptionBody'
      responses:
        '200':
          description: successful
  "/api/v1/descriptions/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show description
      responses:
        '200':
          description: successful
    patch:
      summary: update description
      requestBody:
        $ref: '#/components/requestBodies/descriptionBody'
      responses:
        '200':
          description: successful
    put:
      summary: update description
      requestBody:
        $ref: '#/components/requestBodies/descriptionBody'
      responses:
        '200':
          description: successful
    delete:
      summary: delete description
      responses:
        '200':
          description: successful
components:
  schemas:
    Canva:
      type: object
      required:
        - image
        - chapter_id
      optional:
        - title
      properties:
        image:
          type: string
          format: base64
        chapter_id:
          type: integer
        title:
          type: string
    Storiette:
      type: object
      required:
        - image
        - title
      optiona:
        - description
    Chapter:
      type: object
      required:
        - title
        - storiette_id
      optional:
        - description
    GraphicResource:
      type: object
      required:
        - image
        - resource_type
      properties:
        resource_type:
          type: integer
          enum: [dialog, object, background]
        image:
          type: string
          format: base64
    Character:
      type: object
      required:
        - images
        - name
      optional:
        - description_ids
      properties:
        name:
          type: string
        images:
          type: string
          format: base64
        description_ids:
          type: array
    Description:
      type: object
      required:
        - title
        - text
        - descriptionable_type
        - descriptionable_id
      optional:
        - active
  requestBodies:
    storietteBody:
      description: A JSON object containing storiette information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Storiette'
          example:
            storiette:
              title: Storiette number 1#
              description: "Storiette number 1"
    chapterBody:
      description: A JSON object containing chapter information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Chapter'
          example:
            chapter:
              title: Chapter number 1#
              description: "Chapter number 1"
              storiette_id: 1
    canvaBody:
      description: A JSON object containing canva information
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Canva'
    graphicResourceBody:
      description: A JSON object containing graphic resource information
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/GraphicResource'
    characterBody:
      description: A JSON object containing character information
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/Character'
    descriptionBody:
      description: A JSON object containing description information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Description'
          example:
            description:
              title: 'Description title'
              text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'
              descriptionable_type: 'Character'
              descriptionable_id: 1
              active: true
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:4000
